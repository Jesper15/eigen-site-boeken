-- MySQL Script generated by MySQL Workbench
-- Thu Apr  1 11:35:04 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema boeken
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema boeken
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `boeken` DEFAULT CHARACTER SET utf8 ;
USE `boeken` ;

-- -----------------------------------------------------
-- Table `boeken`.`boek`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `boeken`.`boek` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titel` VARCHAR(100) NOT NULL,
  `datumbegin` DATE NOT NULL,
  `datumeind` DATE NOT NULL,
  `kortebeschrijving` VARCHAR(255) NOT NULL,
  `labelid` INT NOT NULL,
  `schrijverid` INT NOT NULL,
  `genreid` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `boeken`.`label`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `boeken`.`label` (
  `labelid` INT NOT NULL AUTO_INCREMENT,
  `label` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`labelid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `boeken`.`schrijver`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `boeken`.`schrijver` (
  `schrijverid` INT NOT NULL AUTO_INCREMENT,
  `schrijvernaam` VARCHAR(45) NOT NULL,
  `datumgebor` DATE NOT NULL,
  `datumover` DATE NULL,
  `schrijverplaats` VARCHAR(45) NULL,
  PRIMARY KEY (`schrijverid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `boeken`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `boeken`.`genre` (
  `genreid` INT NOT NULL AUTO_INCREMENT,
  `genrenaam` VARCHAR(45) NOT NULL,
  `genreinhoud` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`genreid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `boeken`.`boek_has_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `boeken`.`boek_has_genre` (
  `id` INT NOT NULL,
  `genreid` INT NOT NULL,
  PRIMARY KEY (`id`, `genreid`),
  INDEX `fk_boek_has_genre_genre1_idx` (`genreid` ASC),
  INDEX `fk_boek_has_genre_boek_idx` (`id` ASC),
  CONSTRAINT `fk_boek_has_genre_boek`
    FOREIGN KEY (`id`)
    REFERENCES `boeken`.`boek` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_boek_has_genre_genre1`
    FOREIGN KEY (`genreid`)
    REFERENCES `boeken`.`genre` (`genreid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `boeken`.`boek_has_label`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `boeken`.`boek_has_label` (
  `id` INT NOT NULL,
  `labelid` INT NOT NULL,
  PRIMARY KEY (`id`, `labelid`),
  INDEX `fk_boek_has_label_label1_idx` (`labelid` ASC),
  INDEX `fk_boek_has_label_boek1_idx` (`id` ASC),
  CONSTRAINT `fk_boek_has_label_boek1`
    FOREIGN KEY (`id`)
    REFERENCES `boeken`.`boek` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_boek_has_label_label1`
    FOREIGN KEY (`labelid`)
    REFERENCES `boeken`.`label` (`labelid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `boeken`.`boek_has_schrijver`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `boeken`.`boek_has_schrijver` (
  `id` INT NOT NULL,
  `schrijverid` INT NOT NULL,
  PRIMARY KEY (`id`, `schrijverid`),
  INDEX `fk_boek_has_schrijver_schrijver1_idx` (`schrijverid` ASC),
  INDEX `fk_boek_has_schrijver_boek1_idx` (`id` ASC),
  CONSTRAINT `fk_boek_has_schrijver_boek1`
    FOREIGN KEY (`id`)
    REFERENCES `boeken`.`boek` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_boek_has_schrijver_schrijver1`
    FOREIGN KEY (`schrijverid`)
    REFERENCES `boeken`.`schrijver` (`schrijverid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `boeken`.`gebruiker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `boeken`.`gebruiker` (
  `userid` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`userid`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
